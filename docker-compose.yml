networks:
  soccer_app_network:
    name: soccer_app_network
    driver: bridge

services:
  db:
    restart: on-failure
    image: postgres:17
    container_name: soccer_fastapi_postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - HOST_POSTGRES_PORT=${HOST_POSTGRES_PORT}
    ports:
      - "${HOST_POSTGRES_PORT}:5432"
    volumes:
      - soccer_fastapi_postgres_data:/var/lib/postgresql/data
    networks:
      - soccer_app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    container_name: soccer_fastapi_app
    environment:
      - HOST_PORT=${HOST_PORT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - soccer_app_network
    volumes:
      - .:/app
    ports:
      - "${HOST_PORT}:8000"
    env_file:
      - ./app/.env
    command: sh -c "until pg_isready -h db -U ${POSTGRES_USER}; do sleep 1; done; uvicorn app.main:app --host 0.0.0.0 --port 8000"


volumes:
  soccer_fastapi_postgres_data:
    name: soccer_fastapi_postgres_data
